 "no-unused-vars": "off",
==> 사용하지않는변수 에러띄울꺼냐? 

 "@typescript-eslint/no-unused-vars": ["error"],
typescript 에서만 사용안하는변수를 에러를 띄울꺼냐? 

"no-use-before-define": "off", 정의하고나서 사용하겠다. 를 off 

"react/style-prop-object": "off", 스타일쪽에 {객체} 가 들어가는데 "문자열" 들어가서 그럼. 

"comma-dangle": "off", 맨마지막에서의 쉼표를 넣겠다. 
==> 마지막 매개변수에 , 를 넣으면 프리티어에서도 막히기 떄문에 eslint 넣는게 맞다.

"object-curly-newline": "off", 괄호 내리기 
==> import x from y 때문에 어쩔수없이 해줘야한다. 임포트때문에 공존해서 그럼
==> 원래대로라면 { 한줄내리고 }

"global-require": "off", //폰트 아이콘 등 가져올때 사용되는부분 
==> 이부분은 공식이여서 반드시 넣어줘야함. 그리고 프리로드는 

"react/prop-types": "off",
-PropTypes는 부모로부터 전달받은 prop의 데이터 type을 검사한다. 
 자식 컴포넌트에서 명시해 놓은 데이터 타입과 부모로부터 넘겨받은 
 데이터 타입이 일치하지 않으면 콘솔에 에러 경고문이 띄워진다. 
-prop === 프로포티스 줄인말 === dto === 입력값 === 자바스크립트에서는 
 타입검사 안하는데 ts에서 인터페이스를 검사한다. 타입을 검사하기떄문에 막아놓음
- 풀어놓으면 모든 입력값(컴포넌트)이 있을경우 에러남 
무조건 풀어놔야함.


   "react/jsx-filename-extension": "off",  --> 
// 이렇게 jsx 를 쓰는파일에서는 파일에 jsx 파일확장자명을 붙여줘야하는데 , 현재 tsx 를쓰고있으니까 off 
function MyComponent() {
  return <div />;
}
//
   "arrow-body-style": "off",
한줄이여도 () => { 
return console.log("test") 이렇게 쓰고싶은데 해당 eslint를 안쓰면 => 화살표 뒤에 바로 구현부가 나와야함.
}
    "linebreak-style": "off",
용어(CR, LF)와 이 용어들의 조합(CRLF)은 새로운 줄 (New line) 으로 바꾸는 방식을 의미한다. 
=> os 마다 엔터값이 다른데 .. 에어비엔비랑 윈도우랑 엔터의 정의가 달라서 풀어준것

    "import/no-unresolved": "off", 풀면 from 쪽에서 에러남 

    "import/extensions": "off",
    "no-console": "off", // 콘솔로그를 쓰지않겠다. 라는말
    "import/prefer-default-export": "off", 
    "no-shadow": "off",
    "no-param-reassign": "off",
    "operator-linebreak": "off"

========================================

클래스 쓰는건 레거시한 방법 ( hook 참고 )
