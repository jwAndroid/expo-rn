*리덕스는 중앙저장소 라고보면됨, 중요한 데이터가 모여있는곳
funtion* () {} 이런식으로 쓰긴하는데 나중에 제대로 공부하고 실무할때 알아볼것
지금으로부터 몇개월간 건들필요는 없음.

클라이언트에서 부모와 자식간에 많은 연결? 이 있을때 사이사이를 계속 타고들어
가는걸 '드릴링' 이라고함.

APP <--> redux <--> saga <--> backend 이렇게 이루어지는데
 redux 까지 동기 , saga 부터 직접적으로 서버랑 통신하는거고 이부분부터 비동기겠지?

redux에 있는 메모리를 store 라고함. <--> reducer (업데이트준비) <--> dispatch 
(리듀서한테 이렇게 업데이트하라 지시) + action (동작) 에 당연히 redux에서 받고
saga에 연동후 백앤드랑 통신

------------------------------
리덕스 콜스 문제
  * 리액트는 CSR(클라이언트 사이드 랜더링 웹브라우저랑 백앤드랑 바로통신 반대로 SSR(웹<--> 프론트 <--> 서버 모두 거침)) 인데

콜스는 프론트를 안거치고 백엔드에서 바로 웹에 접근하려고할때 웹이 origin 이 프론트가 아닌데 왜 접근하려고 하냐? 라고해서 접근을 막아주는것 이부분은 
백엔드에서 풀어줘야 접근가능하다.   